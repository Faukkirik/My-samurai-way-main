{"version":3,"file":"static/js/445.a04b7f54.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__4VOlC\",\"item\":\"Profile_item__tk1Jx\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__+5+Qa\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\n\r\nexport const ProfileStatusWithHooks =(props:any)=> {\r\n    let [editMode,setEditMode] = useState<boolean>(false)\r\n    let [status,setStatus] = useState<string>(props.status)\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange =(event: ChangeEvent<HTMLInputElement>)=>{\r\n        setStatus(event.currentTarget.value)\r\n    }\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div>\r\n                        <span\r\n                            onDoubleClick={activateMode}\r\n                        >\r\n                            {props.status || \"------\"}\r\n                        </span>\r\n                    </div>}\r\n                { editMode &&\r\n                    <div>\r\n                        <input\r\n                            autoFocus={true}\r\n                            onBlur={deactivateMode}\r\n                            onChange={onStatusChange}\r\n                            value={status}\r\n                        />\r\n                    </div>}\r\n            </div>\r\n\r\n        )\r\n}","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nexport const ProfileInfo = ({profile, status, updateStatus}: any) => {\r\n    if (!profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large ? profile.photos.large: ''} alt={'hey'}/>\r\n                <div>{profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n                <div><a href={profile.contacts.facebook}>facebook - {profile.contacts.facebook}</a></div>\r\n                <div><a href={profile.contacts.twitter}>twitter - {profile.contacts.twitter}</a></div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__HNXuE\",\"posts\":\"MyPosts_posts__tayyR\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__-bES2\",\"item\":\"Post_item__iUalj\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport {PostPropsType} from \"../../../../Redux/profile-reducer\";\r\n\r\n\r\nexport const Post: React.FC<PostPropsType> = (props ) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img\r\n                    src=\"https://cdnb.artstation.com/p/assets/images/images/015/522/597/large/kittichai-reaungchaichan-razaras-dr-dota2.jpg?1548682919\"\r\n                    alt=\"LOW\"/>\r\n                {props.message}\r\n                <div>Like {props.likeCount}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {PostPropsType} from \"../../../Redux/profile-reducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nexport type ArrayProfilePageState = {\r\n    post: PostPropsType[]\r\n    addPost: (newPostText: string) => void\r\n    onPostChange: (text: string) => void\r\n}\r\n\r\nexport const MyPosts = React.memo((props: ArrayProfilePageState)=> {\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newPostText)\r\n\r\n    }\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {props.post.map((el) => {\r\n                    return (\r\n                        <Post message={el.message} likeCount={el.likeCount} id={el.id} key={el.id}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nexport function AddNewPostForm(props: any) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newPostText\"} component={Textarea} placeholder={\"post message\"} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)","import React from \"react\";\r\nimport {AddPostAC} from \"../../../Redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {StoreType} from \"../../../Redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nlet mapStateToProps =(store: StoreType)=>{\r\n\r\n    return {\r\n        post: store.profileReducer.post\r\n    }\r\n}\r\nlet mapDispatchToProps=(dispatch:Dispatch)=>{\r\n    return {\r\n        addPost: (newPostText: string)=> {\r\n            dispatch(AddPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nexport const Profile =(props: any)=>{\r\n    return(\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer onPostChange={props.newPostText}/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {StoreType} from \"../../Redux/redux-store\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType ={\r\n    userId:  string\r\n}\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profile: any\r\n    status: string\r\n    isAuth: boolean | null\r\n    authorizedUserId: number | null\r\n}\r\ntype MapDispatchPropsType ={\r\n    getUserProfile: (userId: number)=>void\r\n    getStatus: (userId: number)=>void\r\n    updateStatus: (status: string)=>void\r\n}\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype ProfileContainerPropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType> {\r\n    componentDidMount() {\r\n        let userId: number = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            // @ts-ignore\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.content}>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (store: StoreType):MapStatePropsType => {\r\n    return {\r\n        profile: store.profileReducer.profile,\r\n        status: store.profileReducer.status,\r\n        authorizedUserId: store.authReducer.id,\r\n        isAuth: store.authReducer.isAuth\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","ProfileInfo","profile","className","s","src","photos","large","alt","fullName","aboutMe","href","contacts","facebook","twitter","Preloader","Post","message","likeCount","MyPosts","React","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","post","map","el","id","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","store","profileReducer","dispatch","AddPostAC","Profile","onPostChange","ProfileContainer","userId","Number","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","authReducer","isAuth","withRouter"],"sourceRoot":""}